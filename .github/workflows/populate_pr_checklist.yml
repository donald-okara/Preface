name: PR Template and Deliverables

on:
  pull_request:
    types: [opened, edited]

jobs:
  update-pr-body:
    runs-on: ubuntu-latest
    steps:
      - name: Update PR Body
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const prBody = context.payload.pull_request.body || '';

            // Define the template for a blank PR body
            const template = `## ✨ Description

            <!-- Clearly describe what this PR does. What feature, fix, or update are you introducing? -->

            ---

            ## 🐛 Related Issue

            Closes #

            ---

            ## 🚧 Deliverables from Issue

            <!-- These will be auto-filled from the related issue if matched. -->

            ---

            ## ✅ Checklist

            - [ ] 💻 Code compiles and builds successfully without errors
            - [ ] 🧪 Relevant tests (unit/integration) are added or updated
            - [ ] 🏆 All tests pass locally and on CI
            - [ ] 📚 Documentation has been updated (if applicable)
            - [ ] 👀 Reviewer(s) have been assigned

            ---

            ## 💬 Additional Notes

            <!-- Optional: Any extra context, decisions made, or things to look out for -->`;

            // If PR body is blank, insert the template
            if (!prBody.trim()) {
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: prNumber,
                body: template
              });
            } else {
              // Check for "Closes #issue_number" (case-insensitive, flexible spacing)
              const closesMatch = prBody.match(/closes\s+#(\d+)/i);
              if (closesMatch) {
                const issueNumber = closesMatch[1];
                // Fetch the issue body
                const issue = await github.rest.issues.get({
                  owner,
                  repo,
                  issue_number: issueNumber
                });
                const issueBody = issue.data.body || '';

                // Extract deliverables from the issue
                const deliverablesSection = issueBody.match(/## Deliverables\n([\s\S]*?)(?=\n## |$)/);
                let issueDeliverables = [];
                if (deliverablesSection) {
                  const listItems = deliverablesSection[1].match(/- .+/g);
                  if (listItems) {
                    issueDeliverables = listItems.map(item => item.replace(/^- /, '').trim());
                  }
                }

                // Extract current deliverables checklist from PR body
                const prDeliverablesSection = prBody.match(/## 🚧 Deliverables from Issue\n([\s\S]*?)(?=\n## |$)/);
                let prDeliverables = {};
                if (prDeliverablesSection) {
                  const checklistItems = prDeliverablesSection[1].match(/- \[[ x]\] .+/g);
                  if (checklistItems) {
                    checklistItems.forEach(item => {
                      const checked = item.startsWith('- [x]');
                      const text = item.replace(/^- \[[ x]\] /, '').trim();
                      prDeliverables[text] = checked;
                    });
                  }
                }

                // Construct the new deliverables checklist
                let newDeliverables = issueDeliverables.map(item => {
                  const checked = prDeliverables[item] ? 'x' : ' ';
                  return `- [${checked}] ${item}`;
                }).join('\n');

                // Update the deliverables section in the PR body
                const newPrBody = prBody.replace(
                  /(## 🚧 Deliverables from Issue\n)[\s\S]*?(?=\n## |$)/,
                  `$1${newDeliverables}\n`
                );

                // Update the PR body only if it has changed
                if (newPrBody !== prBody) {
                  await github.rest.pulls.update({
                    owner,
                    repo,
                    pull_number: prNumber,
                    body: newPrBody
                  });
                }
              }
            }