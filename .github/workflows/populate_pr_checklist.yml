name: Sync Deliverables from Issue to PR

on:
  issues:
    types: [edited]  # Trigger when the issue is edited
  pull_request:
    types: [opened, synchronize, edited]  # Trigger when PR is opened, synced, or edited
  workflow_dispatch:  # Allow manual runs

jobs:
  sync-deliverables:
    runs-on: ubuntu-latest
    steps:
      - name: Sync Deliverables from Linked Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const prBody = pr.body || "";

            // Extract linked issue number from PR title or body
            const titleMatch = pr.title.match(/#(\d+)/);
            const bodyMatch = prBody.match(/Closes\s+#(\d+)/i);
            const issueNum = titleMatch?.[1] || bodyMatch?.[1];

            if (!issueNum) {
              console.log("No linked issue found in PR.");
              return;
            }

            // Fetch the linked issue
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNum
            });

            const issueBody = issue.data.body || "";
            const checklistItems = issueBody.match(/- \[.\] .+/g) || [];

            // Convert checklist to emoji format
            const emojiList = checklistItems.map(line => {
              const checked = line.includes('[x]');
              return `- ${checked ? '✅' : '❌'} ${line.replace(/- \[.\] /, '')}`;
            }).join('\n');

            // Define PR body structure with injected deliverables
            const fullTemplate = `
            ## ✨ Description
              
              <!-- Clearly describe what this PR does. What feature, fix, or update are you introducing? -->
            
            ---
            
            ## 🐛 Related Issue
            
            Closes #${issueNum}
            
            ---
            
            ## 🚧 Deliverables from Issue
            
            ${emojiList}
            
            ---
            
            ## ✅ Checklist
            
            - [ ] 💻 Code compiles and builds successfully without errors
            - [ ] 🧪 Relevant tests (unit/integration) are added or updated
            - [ ] 🏆 All tests pass locally and on CI
            - [ ] 📚 Documentation has been updated (if applicable)
            - [ ] 👀 Reviewer(s) have been assigned
            
            ---
            
            ## 💬 Additional Notes
            
            <!-- Optional: Any extra context, decisions made, or things to look out for -->
            
            ---
              `.trim();
              
              // Update PR body
              await github.rest.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.number,
            body: fullTemplate
            });